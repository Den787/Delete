Требования:
1. На странице просмотра фотографии полного размера под картинкой должно быть
указано число ее просмотров.

2. На странице просмотра галереи список фотографий должен быть отсортирован по
популярности. В начале списка должны находиться наиболее популярные
фотографии. Популярность определяется числом кликов по фотографии
(просмотров увеличенного изображения).
Комментарии:
при загрузке фотографии ей следует выделять уникальный идентификатор
помимо идентификатора в базе следует хранить тип картинки («gif», «jpg» и т.д.) и
число кликов по ней
уменьшенные изображения следует хранить в отдельной папке с именами вида
«идентификатор.тип»
изображения полного размера также следует хранить в отдельной папке с именами
вида «идентификатор.тип»

вода холодная 157,647

ну так парсьте по частям, картинки сохраняйте отдельно, в базе только пути к ним
сама картинка если в базе то Blob

В INSERT-запросах не нужно указывать конструкцию WHERE
  mysql_query ("INSERT INTO users (img) VALUES('$name')");  
mysql_query ("UPDATE users set img ='$name' WHERE login='$login'");  





// подключение к бд 

$con = mysqli_connect('localhost','root', '','testsite2'); 

mysqli_set_charset($con, 'utf8'); 

//check connection 

if (mysqli_connect_errno()) { 

    echo 'Failed to connect to MySQL: ' .mysqli_connect_error(); 

} 

//Отправляем запрос в бд 

/*$query = "INSERT INTO news_category VALUES (NULL, 'Категория 3','Описание 2', 1,1);"; 

$info = mysqli_query($con,$query); 

var_dump($info);  //true or false 

-------------------------------------------------------------------------------------------- 

echo mysqli_affected_rows($con);  //вернет количество строк которые были изменены 

MAX(id) AS max FROM 'news'; //выводит псевдоним поля вместо оригинала 

$row1 = mysqli_num_fetch_array($result); //вернет 1 запись в виде массива 

--------------------------------------------------------------------------------------------- 

  

//выбор полей из таблицы 

SELECT id,name, surname FROM user; 

--------------- 

//добавление записи 

INSERT INTO название таблицы VALUES(значение1, значение2, значение3, ...); 

INSERT INTO table_name(column1,column2...) VALUES(value1, value2 ...); -порядок не имеет значения 

INSERT INTO table_name(column1,column2...) VALUES(value1, value2 ...),(value1, value2 ...); - несколько записей за 1 запрос 

-------------- 

//удаление записи 

DELETE FROM название_таблицы  

[WHERE условие]  

[ORDER BY поле] DESC - убывание, ASC - возрастание(по умолчанию) 

[LIMIT количество] кол-во записей надо которыми будут производится действия 

DELETE FROM news WHERE id='7'; 

  

Задача: удалить все новости опубликованные раньше 5-ти дней назад. 

DELETE FROM news WHERE date < DATE_SUB(CURDATE(), INTERVAL 5 DAY); 

CURDATE() - ДАТА СЕЙЧАС 

INTERVAL 5 DAY - интервал 5 дней //можно часы минуты и т.п. 

DATE_SUB(a,b) - вычитает из даты a интервал b 

  

задача: удалить 3 последние новости 

DELETE FROM news ORDER BY date DESC LIMIT 3; 

--------------- 

//изменение существующих данных 

UPDATE таблица 

SET поле1 = выражение1, поле2 = выражение2. 

... 

WHERE... 

[ORDER BY поле] 

[LIMIT количество строк] 

  

Задача: скрыть все новости на сайте(переключить поле STATUS на 0) 

UPDATE news SET status='0'; 

echo mysqli_affected_rows($con);  //вернет количество строк которые были изменены 

UPDATE news SET h1='Новый заголовок' WHERE id='11'; //обновляем заголовок статьи под номером 11 

---------------------------------------------------------------------------------------------------------------------------------------------- 

//получение информации(выборка) 

SELECT что_выбирать 

[FROM таблица 

[WHERE условие 

[GROUP BY поле] 

[ORDER BY поле] 

[LIMIT количество]] 

/* 

например, на главной полностью новости, справа список важных новостей(только заголовок)... 

*/ 

Задача: выбрать новости автора id =1 

SELECT * FROM 'news' WHERE 'author_id' = '1'; 

Задача: получить 5 последних новостей в порядке от новых к старым 

SELECT * FROM 'news' ORDER BY date DESC LIMIT 5; 

-- 

функция mysqli_query() отрабатывает тут по другому, он возвращает результат но.. 

$query = "SELECT * FROM news;"; 

$result = mysqli_query($con, $query); 

  

$count = mysqli_num_rows($result); //определяем сколько записей было получено в результате запроса 

echo $count; 

  

$row1 = mysqli_num_fetch_array($result); //вернет 1 запись в виде массива 

$row1 = mysqli_num_fetch_array($result); 

echo <pre>; 

print_r($row1); 

print_r($row2); 

echo </pre>; 

//делаем обход циклом, рекомендует while 

if ($count) {      //если записей не 0 то делаем 

    while($row = mysqli_fetch_array($result)) {  //достаем запись и записываем в row 

        echo '<h1>'; 

        echo $row['h1'];                 //печатаем 

        echo '</h1>'; 

    } 

} 

---- //изучать после агрегатных функций// 

SELECT * FROM 'user' GROUP BY name;  //делаем группировку по именам(покажет только не повторяющиеся) 

Используется для задачи выведения не повторяющихся имен, например Привет, имя, имя... 

  

Задача вывести количество людей с повторяющимися именами 

SELECT name, COUNT(*) AS count FROM 'user' GROUP BY name; 

  

---------------------------------------------------------------------------------------------------------------------------------------------- 

Агрегатные функции: 

COUNT - количество строк в таблице 

SUM - сумма значений выбранного поля 

AVG - среднее значение по выбранному полю 

MAX,MIN - наибольшее и наименьшее значение данного поля 

  

Задача найти количество новостей: 

SELECT COUNT(*) FROM 'news'; 

SELECT COUNT(*) FROM 'news' WHERE 'category_id' = '1'; 

  

Задача наибольшее и наименьшее значение поля: 

SELECT MAX(id) FROM 'news'; 

SELECT MAX(id) AS max FROM 'news'; //выводит псевдоним поля вместо оригинала 

  

  

  

  

 